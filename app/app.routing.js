"use strict";
var core_1 = require("@angular/core");
var router_1 = require("nativescript-angular/router");
var login_component_1 = require("./login/login.component");
var patients_component_1 = require("./patient/patients.component");
var patient_detail_component_1 = require("./patient/patient-detail.component");
var materials_component_1 = require("./material/materials.component");
var material_detail_component_1 = require("./material/material-detail.component");
var routes = [
    { path: "", component: login_component_1.LoginComponent },
    //{ path: "", redirectTo: "/patients", pathMatch: "full" },
    //{ path: "test", component: TestComponent },
    //{ path: "needs", component: NeedComponent },
    { path: "patients", component: patients_component_1.PatientsComponent },
    { path: "patient/:id", component: patient_detail_component_1.PatientDetailComponent },
    //{path: "patient/:id/needs", component: NeedComponent }, // teddy - Tota e vista pode vir a ser usada para fins de classificacao
    //Materials
    { path: "patient/:id/materials", component: materials_component_1.MaterialsComponent },
    { path: "patient/:id/material/:id_material", component: material_detail_component_1.MaterialDetailComponent }
];
exports.navigatableComponents = [
    login_component_1.LoginComponent
];
var AppRoutingModule = (function () {
    function AppRoutingModule() {
    }
    return AppRoutingModule;
}());
AppRoutingModule = __decorate([
    core_1.NgModule({
        imports: [router_1.NativeScriptRouterModule.forRoot(routes)],
        exports: [router_1.NativeScriptRouterModule]
    })
], AppRoutingModule);
exports.AppRoutingModule = AppRoutingModule;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLnJvdXRpbmcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhcHAucm91dGluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0NBQXlDO0FBQ3pDLHNEQUF1RTtBQUd2RSwyREFBeUQ7QUFDekQsbUVBQWlFO0FBQ2pFLCtFQUE0RTtBQUM1RSxzRUFBb0U7QUFDcEUsa0ZBQStFO0FBSS9FLElBQU0sTUFBTSxHQUFXO0lBQ25CLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxTQUFTLEVBQUUsZ0NBQWMsRUFBRTtJQUN2QywyREFBMkQ7SUFDM0QsNkNBQTZDO0lBQzdDLDhDQUE4QztJQUM5QyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLHNDQUFpQixFQUFFO0lBQ2xELEVBQUUsSUFBSSxFQUFFLGFBQWEsRUFBRSxTQUFTLEVBQUUsaURBQXNCLEVBQUU7SUFFMUQsaUlBQWlJO0lBQ2pJLFdBQVc7SUFDWCxFQUFFLElBQUksRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsd0NBQWtCLEVBQUU7SUFDaEUsRUFBRSxJQUFJLEVBQUUsbUNBQW1DLEVBQUUsU0FBUyxFQUFFLG1EQUF1QixFQUFFO0NBRXBGLENBQUM7QUFFVyxRQUFBLHFCQUFxQixHQUFHO0lBQ25DLGdDQUFjO0NBQ2YsQ0FBQztBQU9GLElBQWEsZ0JBQWdCO0lBQTdCO0lBQWdDLENBQUM7SUFBRCx1QkFBQztBQUFELENBQUMsQUFBakMsSUFBaUM7QUFBcEIsZ0JBQWdCO0lBTDVCLGVBQVEsQ0FBQztRQUNOLE9BQU8sRUFBRSxDQUFDLGlDQUF3QixDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNuRCxPQUFPLEVBQUUsQ0FBQyxpQ0FBd0IsQ0FBQztLQUN0QyxDQUFDO0dBRVcsZ0JBQWdCLENBQUk7QUFBcEIsNENBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBOYXRpdmVTY3JpcHRSb3V0ZXJNb2R1bGUgfSBmcm9tIFwibmF0aXZlc2NyaXB0LWFuZ3VsYXIvcm91dGVyXCI7XHJcbmltcG9ydCB7IFJvdXRlcyB9IGZyb20gXCJAYW5ndWxhci9yb3V0ZXJcIjtcclxuXHJcbmltcG9ydCB7IExvZ2luQ29tcG9uZW50IH0gZnJvbSBcIi4vbG9naW4vbG9naW4uY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IFBhdGllbnRzQ29tcG9uZW50IH0gZnJvbSBcIi4vcGF0aWVudC9wYXRpZW50cy5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgUGF0aWVudERldGFpbENvbXBvbmVudCB9IGZyb20gXCIuL3BhdGllbnQvcGF0aWVudC1kZXRhaWwuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IE1hdGVyaWFsc0NvbXBvbmVudCB9IGZyb20gXCIuL21hdGVyaWFsL21hdGVyaWFscy5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgTWF0ZXJpYWxEZXRhaWxDb21wb25lbnQgfSBmcm9tIFwiLi9tYXRlcmlhbC9tYXRlcmlhbC1kZXRhaWwuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IE5lZWRDb21wb25lbnQgfSBmcm9tIFwiLi9uZWVkL25lZWQuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IFRlc3RDb21wb25lbnQgfSBmcm9tIFwiLi90ZXN0L3Rlc3QuY29tcG9uZW50XCI7XHJcbiBcclxuY29uc3Qgcm91dGVzOiBSb3V0ZXMgPSBbXHJcbiAgICB7IHBhdGg6IFwiXCIsIGNvbXBvbmVudDogTG9naW5Db21wb25lbnQgfSwgXHJcbiAgICAvL3sgcGF0aDogXCJcIiwgcmVkaXJlY3RUbzogXCIvcGF0aWVudHNcIiwgcGF0aE1hdGNoOiBcImZ1bGxcIiB9LFxyXG4gICAgLy97IHBhdGg6IFwidGVzdFwiLCBjb21wb25lbnQ6IFRlc3RDb21wb25lbnQgfSxcclxuICAgIC8veyBwYXRoOiBcIm5lZWRzXCIsIGNvbXBvbmVudDogTmVlZENvbXBvbmVudCB9LFxyXG4gICAgeyBwYXRoOiBcInBhdGllbnRzXCIsIGNvbXBvbmVudDogUGF0aWVudHNDb21wb25lbnQgfSxcclxuICAgIHsgcGF0aDogXCJwYXRpZW50LzppZFwiLCBjb21wb25lbnQ6IFBhdGllbnREZXRhaWxDb21wb25lbnQgfSxcclxuXHJcbiAgICAvL3twYXRoOiBcInBhdGllbnQvOmlkL25lZWRzXCIsIGNvbXBvbmVudDogTmVlZENvbXBvbmVudCB9LCAvLyB0ZWRkeSAtIFRvdGEgZSB2aXN0YSBwb2RlIHZpciBhIHNlciB1c2FkYSBwYXJhIGZpbnMgZGUgY2xhc3NpZmljYWNhb1xyXG4gICAgLy9NYXRlcmlhbHNcclxuICAgIHsgcGF0aDogXCJwYXRpZW50LzppZC9tYXRlcmlhbHNcIiwgY29tcG9uZW50OiBNYXRlcmlhbHNDb21wb25lbnQgfSxcclxuICAgIHsgcGF0aDogXCJwYXRpZW50LzppZC9tYXRlcmlhbC86aWRfbWF0ZXJpYWxcIiwgY29tcG9uZW50OiBNYXRlcmlhbERldGFpbENvbXBvbmVudCB9XHJcbiAgICAgICBcclxuXTtcclxuXHJcbmV4cG9ydCBjb25zdCBuYXZpZ2F0YWJsZUNvbXBvbmVudHMgPSBbXHJcbiAgTG9naW5Db21wb25lbnRcclxuXTtcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgICBpbXBvcnRzOiBbTmF0aXZlU2NyaXB0Um91dGVyTW9kdWxlLmZvclJvb3Qocm91dGVzKV0sXHJcbiAgICBleHBvcnRzOiBbTmF0aXZlU2NyaXB0Um91dGVyTW9kdWxlXVxyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIEFwcFJvdXRpbmdNb2R1bGUgeyB9Il19